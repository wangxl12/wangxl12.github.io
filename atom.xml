<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WXL&#39;s blog</title>
  
  <subtitle>Talk is cheap, show me your hardwork.</subtitle>
  <link href="https://wangxl12.github.io/atom.xml" rel="self"/>
  
  <link href="https://wangxl12.github.io/"/>
  <updated>2021-10-26T06:47:04.353Z</updated>
  <id>https://wangxl12.github.io/</id>
  
  <author>
    <name>WXL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线性回归从零开始实现</title>
    <link href="https://wangxl12.github.io/2021/10/25/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wangxl12.github.io/2021/10/25/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-10-25T02:04:59.000Z</published>
    <updated>2021-10-26T06:47:04.353Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文代码取自李沐的《动手学习深度学习》，里面有些代码细节让我觉得非常值得斟酌，特记录。&lt;/p&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="torch" scheme="https://wangxl12.github.io/tags/torch/"/>
    
  </entry>
  
  <entry>
    <title>pytorch的自动求导</title>
    <link href="https://wangxl12.github.io/2021/10/24/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/pytorch%E7%9A%84%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/"/>
    <id>https://wangxl12.github.io/2021/10/24/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/pytorch%E7%9A%84%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC/</id>
    <published>2021-10-24T06:44:32.000Z</published>
    <updated>2021-10-26T04:57:14.710Z</updated>
    
    
    <summary type="html">&lt;h1&gt;使用pytorch的backward()报错&lt;/h1&gt;
&lt;p&gt;使用pytorch的backward函数的时候报错：RuntimeError: grad can be implicitly created only for scalar outputs。&lt;/p&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="torch" scheme="https://wangxl12.github.io/tags/torch/"/>
    
  </entry>
  
  <entry>
    <title>python高级编程-part1</title>
    <link href="https://wangxl12.github.io/2021/10/23/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-part1/"/>
    <id>https://wangxl12.github.io/2021/10/23/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B-part1/</id>
    <published>2021-10-23T03:16:32.000Z</published>
    <updated>2021-10-23T11:22:37.210Z</updated>
    
    
    <summary type="html">&lt;h1&gt;outline&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;函数与函数式编程：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一等函数&lt;/li&gt;
&lt;li&gt;把函数视为对象&lt;/li&gt;
&lt;li&gt;高阶函数&lt;/li&gt;
&lt;li&gt;列表推导 vs (map/reduce)&lt;/li&gt;
&lt;li&gt;函数的参数与返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;方法和装饰器：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有用的装饰器&lt;/li&gt;
&lt;li&gt;由简单到复杂实现各类装饰器&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python高级编程" scheme="https://wangxl12.github.io/categories/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="python高级编程" scheme="https://wangxl12.github.io/tags/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门</title>
    <link href="https://wangxl12.github.io/2021/10/12/Docker/Docker%E5%85%A5%E9%97%A8/"/>
    <id>https://wangxl12.github.io/2021/10/12/Docker/Docker%E5%85%A5%E9%97%A8/</id>
    <published>2021-10-12T02:10:23.000Z</published>
    <updated>2021-10-12T02:28:21.331Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1&gt;Docker学习网站&lt;/h1&gt;
&lt;p&gt;推荐狂神的Docker视频：&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Docker" scheme="https://wangxl12.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://wangxl12.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>miniconda+tf2.x_gpu+torch_gpu环境配置</title>
    <link href="https://wangxl12.github.io/2021/10/08/%E9%85%8D%E7%8E%AF%E5%A2%83/miniconda+tf2_gpu+torch_gpu%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://wangxl12.github.io/2021/10/08/%E9%85%8D%E7%8E%AF%E5%A2%83/miniconda+tf2_gpu+torch_gpu%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2021-10-08T13:17:00.000Z</published>
    <updated>2021-10-09T07:38:07.810Z</updated>
    
    
    <summary type="html">&lt;h1&gt;情况描述&lt;/h1&gt;
&lt;p&gt;需要运行联邦学习图神经网络，同时需要torch和tf2.x，运行图神经网络还用到了stellargraph库，这个库依赖于tf，而且要求tf版本&amp;gt;=2.1.0，在代码内部还用到了keras，需要keras和tf版本相匹配。&lt;/p&gt;</summary>
    
    
    
    <category term="环境配置" scheme="https://wangxl12.github.io/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="环境配置" scheme="https://wangxl12.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>入门与FedML框架使用</title>
    <link href="https://wangxl12.github.io/2021/10/06/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/%E5%85%A5%E9%97%A8%E4%B8%8EFedML%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://wangxl12.github.io/2021/10/06/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/%E5%85%A5%E9%97%A8%E4%B8%8EFedML%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</id>
    <published>2021-10-06T11:26:27.000Z</published>
    <updated>2021-10-06T13:16:21.759Z</updated>
    
    
    <summary type="html">&lt;h1&gt;Why federated learning?&lt;/h1&gt;</summary>
    
    
    
    <category term="联邦学习" scheme="https://wangxl12.github.io/categories/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="联邦学习" scheme="https://wangxl12.github.io/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="FedML" scheme="https://wangxl12.github.io/tags/FedML/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-动态规划</title>
    <link href="https://wangxl12.github.io/2021/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>https://wangxl12.github.io/2021/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</id>
    <published>2021-09-22T07:35:57.000Z</published>
    <updated>2021-09-22T07:35:57.503Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-回溯算法</title>
    <link href="https://wangxl12.github.io/2021/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"/>
    <id>https://wangxl12.github.io/2021/09/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/</id>
    <published>2021-09-22T03:10:37.000Z</published>
    <updated>2021-09-22T07:26:48.648Z</updated>
    
    
    <summary type="html">&lt;p&gt;2004 年上映了一部非常著名的电影《蝴蝶效应》，讲的就是主人公为了达到自己的目标，一直通过回溯的方法，回到童年，在关键的岔路口，重新做选择。当然，这只是科幻电影，我们的人生是无法倒退的，但是这其中蕴含的思想其实就是回溯算法。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="回溯" scheme="https://wangxl12.github.io/tags/%E5%9B%9E%E6%BA%AF/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-分治算法</title>
    <link href="https://wangxl12.github.io/2021/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/"/>
    <id>https://wangxl12.github.io/2021/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</id>
    <published>2021-09-12T06:06:37.000Z</published>
    <updated>2021-09-22T03:03:34.768Z</updated>
    
    
    <summary type="html">&lt;p&gt;分治算法的核心思想是将原问题划分成 n 个规模较小，并且结构与原问题相似的子问题，递归地解决这些子问题，然后再合并其结果，就得到原问题的解。分治算法是一种处理问题的思想，递归是一种编程技巧。分治算法比较适合使用递归来实现。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="分治" scheme="https://wangxl12.github.io/tags/%E5%88%86%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-贪心算法</title>
    <link href="https://wangxl12.github.io/2021/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    <id>https://wangxl12.github.io/2021/09/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</id>
    <published>2021-09-12T02:25:07.000Z</published>
    <updated>2021-09-16T02:57:14.806Z</updated>
    
    
    <summary type="html">&lt;p&gt;贪心算法有很多经典应用，比如霍夫曼编码、Prim和Kruskal最小生成树算法、Dijkstra单源最短路径算法。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="贪心" scheme="https://wangxl12.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-归并、快排</title>
    <link href="https://wangxl12.github.io/2021/09/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%BD%92%E5%B9%B6%E3%80%81%E5%BF%AB%E6%8E%92/"/>
    <id>https://wangxl12.github.io/2021/09/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%BD%92%E5%B9%B6%E3%80%81%E5%BF%AB%E6%8E%92/</id>
    <published>2021-09-11T06:20:53.000Z</published>
    <updated>2021-09-11T13:56:40.926Z</updated>
    
    
    <summary type="html">&lt;p&gt;归并排序和快排都使用了分治思想，可以借鉴这种思想来解决非排序问题，比如：如何在&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;的时间复杂度内找到一个无序数组中的第k大元素？&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>推免</title>
    <link href="https://wangxl12.github.io/2021/09/07/%E9%9D%A2%E7%BB%8F/%E6%8E%A8%E5%85%8D/"/>
    <id>https://wangxl12.github.io/2021/09/07/%E9%9D%A2%E7%BB%8F/%E6%8E%A8%E5%85%8D/</id>
    <published>2021-09-07T10:26:06.000Z</published>
    <updated>2021-09-10T06:52:34.492Z</updated>
    
    
    <summary type="html">&lt;h1&gt;专业课&lt;/h1&gt;</summary>
    
    
    
    <category term="面经" scheme="https://wangxl12.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://wangxl12.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="推免" scheme="https://wangxl12.github.io/tags/%E6%8E%A8%E5%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>常见内部排序的分析（面试）</title>
    <link href="https://wangxl12.github.io/2021/09/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B8%B8%E8%A7%81%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E7%9A%84%E5%88%86%E6%9E%90/"/>
    <id>https://wangxl12.github.io/2021/09/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B8%B8%E8%A7%81%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%E7%9A%84%E5%88%86%E6%9E%90/</id>
    <published>2021-09-05T07:12:09.000Z</published>
    <updated>2021-09-05T13:57:23.505Z</updated>
    
    
    <summary type="html">&lt;h1&gt;插入排序&lt;/h1&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>王道-顺序、折半、分块查找</title>
    <link href="https://wangxl12.github.io/2021/09/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E9%81%93-%E9%A1%BA%E5%BA%8F%E3%80%81%E6%8A%98%E5%8D%8A%E3%80%81%E5%88%86%E5%9D%97%E6%9F%A5%E6%89%BE/"/>
    <id>https://wangxl12.github.io/2021/09/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E9%81%93-%E9%A1%BA%E5%BA%8F%E3%80%81%E6%8A%98%E5%8D%8A%E3%80%81%E5%88%86%E5%9D%97%E6%9F%A5%E6%89%BE/</id>
    <published>2021-09-04T06:57:26.000Z</published>
    <updated>2021-09-08T12:30:09.563Z</updated>
    
    
    <summary type="html">&lt;h1&gt;基本概念&lt;/h1&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>numpy广播机制的巧妙使用</title>
    <link href="https://wangxl12.github.io/2021/08/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/numpy%E5%B9%BF%E6%92%AD%E6%9C%BA%E5%88%B6%E7%9A%84%E5%B7%A7%E5%A6%99%E4%BD%BF%E7%94%A8/"/>
    <id>https://wangxl12.github.io/2021/08/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/numpy%E5%B9%BF%E6%92%AD%E6%9C%BA%E5%88%B6%E7%9A%84%E5%B7%A7%E5%A6%99%E4%BD%BF%E7%94%A8/</id>
    <published>2021-08-27T03:06:01.000Z</published>
    <updated>2021-10-05T11:41:42.640Z</updated>
    
    
    <summary type="html">&lt;h1&gt;numpy广播在语义分割上的妙用&lt;/h1&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="cv" scheme="https://wangxl12.github.io/tags/cv/"/>
    
    <category term="numpy" scheme="https://wangxl12.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>学习链接</title>
    <link href="https://wangxl12.github.io/2021/08/23/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/%E5%AD%A6%E4%B9%A0%E9%93%BE%E6%8E%A5/"/>
    <id>https://wangxl12.github.io/2021/08/23/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/%E5%AD%A6%E4%B9%A0%E9%93%BE%E6%8E%A5/</id>
    <published>2021-08-23T03:39:44.000Z</published>
    <updated>2021-10-06T11:29:03.152Z</updated>
    
    
    <summary type="html">&lt;h1&gt;深度学习&lt;/h1&gt;</summary>
    
    
    
    <category term="常用链接" scheme="https://wangxl12.github.io/categories/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/"/>
    
    
    <category term="常用链接" scheme="https://wangxl12.github.io/tags/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-冒泡、插入、选择排序</title>
    <link href="https://wangxl12.github.io/2021/08/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%86%92%E6%B3%A1%E3%80%81%E6%8F%92%E5%85%A5%E3%80%81%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/>
    <id>https://wangxl12.github.io/2021/08/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%86%92%E6%B3%A1%E3%80%81%E6%8F%92%E5%85%A5%E3%80%81%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</id>
    <published>2021-08-23T03:28:36.000Z</published>
    <updated>2021-09-11T06:10:48.892Z</updated>
    
    
    <summary type="html">&lt;p&gt;插入排序和冒泡排序的时间复杂度相同，都是&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(n^2)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.064108em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;​，在实际的软件开发里，为什么我们更倾向于使用插入排序算法而不是冒泡排序算法呢？&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-递归</title>
    <link href="https://wangxl12.github.io/2021/08/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%80%92%E5%BD%92/"/>
    <id>https://wangxl12.github.io/2021/08/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%80%92%E5%BD%92/</id>
    <published>2021-08-22T06:24:45.000Z</published>
    <updated>2021-09-04T08:10:21.262Z</updated>
    
    
    <summary type="html">&lt;p&gt;递归不需要我们去从最高层到最底层屡清楚，我们只需要考虑的是当前层与上一层之间的关系，将这种关系表示出来，然后将终止递归的条件确定清楚即可。至于一层一层往下调交给计算机来处理吧！试图想搞清楚计算机每一步都是怎么执行的，这样就很容易被绕进去。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>王争数据结构与算法学习笔记-队列</title>
    <link href="https://wangxl12.github.io/2021/08/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%98%9F%E5%88%97/"/>
    <id>https://wangxl12.github.io/2021/08/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%8E%8B%E4%BA%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%98%9F%E5%88%97/</id>
    <published>2021-08-22T01:41:33.000Z</published>
    <updated>2021-09-04T08:10:35.019Z</updated>
    
    
    <summary type="html">&lt;p&gt;CPU的资源有限，任务处理速度与线程的个数不是线性相关，过多的线程反而会导致CPU的频繁切换，处理性能下降。所以，线程池的大小一般都是综合考虑要处理任务的特点和硬件环境来实现设置的。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="https://wangxl12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>深度学习必读书单</title>
    <link href="https://wangxl12.github.io/2021/08/21/%E5%BF%85%E8%AF%BB%E4%B9%A6%E5%8D%95/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wangxl12.github.io/2021/08/21/%E5%BF%85%E8%AF%BB%E4%B9%A6%E5%8D%95/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-08-21T07:21:20.000Z</published>
    <updated>2021-09-04T08:12:41.793Z</updated>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/34988786/&quot;&gt;智能计算系统&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="必读书单" scheme="https://wangxl12.github.io/categories/%E5%BF%85%E8%AF%BB%E4%B9%A6%E5%8D%95/"/>
    
    
    <category term="深度学习" scheme="https://wangxl12.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="必读书单" scheme="https://wangxl12.github.io/tags/%E5%BF%85%E8%AF%BB%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
</feed>
